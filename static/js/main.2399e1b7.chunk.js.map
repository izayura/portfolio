{"version":3,"sources":["Home.jsx","AboutMe.jsx","Projects.jsx","Contact.jsx","Router.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","className","Component","AboutMe","Projects","Contact","Routes","to","exact","path","App","Fragment","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0XAuBeA,G,uLAjBP,OACI,yBAAKC,UAAU,QACZ,wBAAIA,UAAU,QACvB,mCADS,IACM,mCADN,IACqB,mCADrB,IACoC,mCAC7C,mCACA,mCACA,6BACE,mCALO,IAKQ,mCALR,IAKuB,mCALvB,IAKsC,mCAC/C,mCACA,mCACA,yC,GAbaC,cCYJC,G,uLAVP,OACI,yBAAKF,UAAU,WACX,yDACA,qYACA,4DACA,0D,GAPMC,cCgBPE,G,uLAdP,OACI,yBAAKH,UAAU,YACX,2DACJ,4BACI,4CACA,yCACA,+CACA,iDACA,kD,GAVOC,cCgBRG,G,uLAdP,OACI,yBAAKJ,UAAU,WACX,mEACL,4BACI,wCACA,qCACA,sCACA,8C,GATOC,cC4DPI,E,iLAjDP,OACI,kBAAC,IAAD,KACI,6BACI,4BACI,4BACI,kBAAC,IAAD,CAAMC,GAAG,KAAT,SAEJ,4BACI,kBAAC,IAAD,CAAMA,GAAG,YAAT,aAEJ,4BACI,kBAAC,IAAD,CAAMA,GAAG,aAAT,aAEJ,4BACI,kBAAC,IAAD,CAAMA,GAAG,YAAT,aAIR,wBAAIN,UAAU,SASd,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,KACd,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,YACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,aACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,YACR,kBAAC,EAAD,c,GAxCPP,aCANQ,MARf,WACE,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,EAAD,QCKcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.2399e1b7.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './Home.css';\r\n\r\nclass Home extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Home\">\r\n               <h1 className='name'>\r\n      <span>G</span> <span>L</span> <span>O</span> <span>R</span>\r\n      <span>I</span>\r\n      <span>A</span>\r\n      <br></br>\r\n        <span>R</span> <span>A</span> <span>M</span> <span>I</span>\r\n      <span>R</span>\r\n      <span>E</span>\r\n      <span>Z</span>\r\n    </h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport './AboutMe.css';\r\n\r\nclass AboutMe extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"profile\">\r\n                <h1> Aquí irá mi perfil</h1>\r\n                <h2>Durante más de 10 años me he enfocado en una de mis grandes pasiones: la repostería creativa, pero ahora salgo de mi zona de confort e incursiono en la industria de la tecnología, donde siempre se aprende algo nuevo y puedes conectar con todo el mundo, buscando poder aportar más a la sociedad y explorar otras formas de usar mi creatividad. </h2>\r\n                <h3>Lista de habilidades blandas</h3>\r\n                <h3>Lista de herramientas</h3>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AboutMe;","import React, { Component } from 'react';\r\nimport './Projects.css';\r\n\r\nclass Projects extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"projects\">\r\n                <h1> Aqui irán mis proyectos</h1>\r\n            <ul>\r\n                <li>Burger Queen</li>\r\n                <li>Selectivo</li>\r\n                <li>CheckIn-love(?)</li>\r\n                <li>Social Network(?)</li>\r\n                <li>Lab Notes(?)</li>\r\n            </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Projects;","import React,{Component} from 'react';\r\nimport './Contact.css';\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"contact\">\r\n                <h1> Aqui irán mis datos de contacto</h1>\r\n           <ul>\r\n               <li>Telefono</li>\r\n               <li>Email</li>\r\n               <li>GitHub</li>\r\n               <li>LinkedIn</li>\r\n           </ul>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";  \r\nimport Home from './Home';\r\nimport AboutMe from './AboutMe';\r\nimport Projects from './Projects';\r\nimport Contact from './Contact';\r\n\r\nclass Routes extends Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div>\r\n                    <ul>\r\n                        <li>\r\n                            <Link to=\"/\">Home</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/aboutMe\">About Me</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/projects\">Projects</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/contact\">Contact</Link>\r\n                        </li>\r\n                    </ul>\r\n\r\n                    <hr className=\"line\" />\r\n\r\n                    {/*\r\n                A <Switch> looks through all its children <Route>\r\n                elements and renders the first one whose path\r\n                matches the current URL. Use a <Switch> any time\r\n                you have multiple routes, but you want only one\r\n                of them to render at a time\r\n              */}\r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n                            <Home />\r\n                        </Route>\r\n                        <Route path=\"/aboutMe\">\r\n                            <AboutMe />\r\n                        </Route>\r\n                        <Route path=\"/projects\">\r\n                            <Projects />\r\n                        </Route>\r\n                        <Route path=\"/contact\">\r\n                            <Contact />\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Routes;","import React from 'react';\nimport './App.css';\nimport Routes from './Router';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Routes />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}